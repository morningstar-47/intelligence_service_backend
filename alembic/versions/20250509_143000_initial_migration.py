# alembic/versions/20250509_143000_initial_migration.py
"""initial migration

Revision ID: 01234567890a
Revises: 
Create Date: 2025-05-09 14:30:00.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01234567890a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Table users
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('matricule', sa.String(), nullable=False),
        sa.Column('full_name', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('hashed_password', sa.String(), nullable=False),
        sa.Column('role', sa.Enum('ADMIN', 'COMMANDER', 'FIELD', name='userrole'), nullable=False),
        sa.Column('clearance_level', sa.Enum('TOP_SECRET', 'SECRET', 'CONFIDENTIAL', name='clearancelevel'), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_matricule'), 'users', ['matricule'], unique=True)
    
    # Table report
    op.create_table('report',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('source', sa.String(length=255), nullable=True),
        sa.Column('classification', sa.String(length=50), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=True),
        sa.Column('coordinates', sa.String(length=100), nullable=True),
        sa.Column('report_date', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('submitted_by_id', sa.Integer(), nullable=False),
        sa.Column('approved_by_id', sa.Integer(), nullable=True),
        sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'ARCHIVED', name='reportstatus'), nullable=False, default='DRAFT'),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('ai_analysis', sa.Text(), nullable=True),
        sa.Column('threat_level', sa.String(length=50), nullable=True),
        sa.Column('credibility_score', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['submitted_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_classification'), 'report', ['classification'], unique=False)
    op.create_index(op.f('ix_report_id'), 'report', ['id'], unique=False)
    op.create_index(op.f('ix_report_status'), 'report', ['status'], unique=False)
    op.create_index(op.f('ix_report_title'), 'report', ['title'], unique=False)
    
    # Table tag
    op.create_table('tag',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=False)
    op.create_index(op.f('ix_tag_name'), 'tag', ['name'], unique=True)
    
    # Table alert
    op.create_table('alert',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('alert_type', sa.Enum('TACTICAL', 'STRATEGIC', 'CYBER', 'INTEL', 'FIELD', 'SYSTEM', name='alerttype'), nullable=False),
        sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='alertseverity'), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=True),
        sa.Column('coordinates', sa.String(length=100), nullable=True),
        sa.Column('status', sa.Enum('NEW', 'ACKNOWLEDGED', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='alertstatus'), nullable=False, default='NEW'),
        sa.Column('created_by_id', sa.Integer(), nullable=False),
        sa.Column('assigned_to_id', sa.Integer(), nullable=True),
        sa.Column('related_report_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('resolved_at', sa.DateTime(), nullable=True),
        sa.Column('ai_generated', sa.Boolean(), nullable=False, default=False),
        sa.Column('ai_recommendations', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['related_report_id'], ['report.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_alert_type'), 'alert', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alert_created_at'), 'alert', ['created_at'], unique=False)
    op.create_index(op.f('ix_alert_id'), 'alert', ['id'], unique=False)
    op.create_index(op.f('ix_alert_severity'), 'alert', ['severity'], unique=False)
    op.create_index(op.f('ix_alert_status'), 'alert', ['status'], unique=False)
    op.create_index(op.f('ix_alert_title'), 'alert', ['title'], unique=False)
    
    # Table audit_log
    op.create_table('audit_log',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('action', sa.String(length=100), nullable=False),
        sa.Column('resource_type', sa.String(length=100), nullable=True),
        sa.Column('resource_id', sa.Integer(), nullable=True),
        sa.Column('details', sa.Text(), nullable=True),
        sa.Column('metadata', sa.JSON(), nullable=True),
        sa.Column('timestamp', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('session_id', sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_action'), 'audit_log', ['action'], unique=False)
    op.create_index(op.f('ix_audit_log_id'), 'audit_log', ['id'], unique=False)
    op.create_index(op.f('ix_audit_log_resource_type'), 'audit_log', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_log_timestamp'), 'audit_log', ['timestamp'], unique=False)
    
    # Table map_marker
    op.create_table('map_marker',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('latitude', sa.Float(), nullable=False),
        sa.Column('longitude', sa.Float(), nullable=False),
        sa.Column('marker_type', sa.Enum('INTEL', 'THREAT', 'ASSET', 'AGENT', 'INCIDENT', 'OPERATION', 'BASE', 'CHECKPOINT', 'CUSTOM', name='mapmarkertype'), nullable=False),
        sa.Column('created_by_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('report_id', sa.Integer(), nullable=True),
        sa.Column('alert_id', sa.Integer(), nullable=True),
        sa.Column('color', sa.String(length=50), nullable=True),
        sa.Column('icon', sa.String(length=50), nullable=True),
        sa.Column('is_visible', sa.Boolean(), nullable=False, default=True),
        sa.Column('min_zoom_level', sa.Integer(), nullable=True),
        sa.Column('custom_data', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['alert_id'], ['alert.id'], ),
        sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_map_marker_id'), 'map_marker', ['id'], unique=False)
    op.create_index(op.f('ix_map_marker_marker_type'), 'map_marker', ['marker_type'], unique=False)
    
    # Table geo_layer
    op.create_table('geo_layer',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('layer_type', sa.String(length=50), nullable=False),
        sa.Column('geo_data', sa.JSON(), nullable=False),
        sa.Column('created_by_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('color', sa.String(length=50), nullable=True),
        sa.Column('fill_color', sa.String(length=50), nullable=True),
        sa.Column('stroke_width', sa.Integer(), nullable=True),
        sa.Column('opacity', sa.Float(), nullable=True),
        sa.Column('is_visible', sa.Boolean(), nullable=False, default=True),
        sa.Column('is_interactive', sa.Boolean(), nullable=False, default=True),
        sa.Column('min_zoom_level', sa.Integer(), nullable=True),
        sa.Column('z_index', sa.Integer(), nullable=False, default=0),
        sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geo_layer_id'), 'geo_layer', ['id'], unique=False)
    
    # Table map_settings
    op.create_table('map_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('default_latitude', sa.Float(), nullable=True),
        sa.Column('default_longitude', sa.Float(), nullable=True),
        sa.Column('default_zoom', sa.Integer(), nullable=True),
        sa.Column('preferred_map_type', sa.String(length=50), nullable=True),
        sa.Column('show_grid', sa.Boolean(), nullable=False, default=True),
        sa.Column('show_labels', sa.Boolean(), nullable=False, default=True),
        sa.Column('visible_marker_types', sa.JSON(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_map_settings_id'), 'map_settings', ['id'], unique=False)
    
    # Table attachment
    op.create_table('attachment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('filename', sa.String(length=255), nullable=False),
        sa.Column('file_type', sa.String(length=100), nullable=False),
        sa.Column('file_size', sa.Integer(), nullable=False),
        sa.Column('file_path', sa.String(length=512), nullable=False),
        sa.Column('report_id', sa.Integer(), nullable=False),
        sa.Column('uploaded_by_id', sa.Integer(), nullable=False),
        sa.Column('uploaded_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
        sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachment_id'), 'attachment', ['id'], unique=False)
    
    # Table comment
    op.create_table('comment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('report_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_id'), 'comment', ['id'], unique=False)
    
    # Table alert_action
    op.create_table('alert_action',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('alert_id', sa.Integer(), nullable=False),
        sa.Column('action', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('data', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['alert_id'], ['alert.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_action_id'), 'alert_action', ['id'], unique=False)
    
    # Table alert_notification
    op.create_table('alert_notification',
        sa.Column('alert_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('notified_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')),
        sa.Column('read', sa.Boolean(), nullable=False, default=False),
        sa.ForeignKeyConstraint(['alert_id'], ['alert.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('alert_id', 'user_id')
    )
    
    # Table report_tag (association)
    op.create_table('report_tag',
        sa.Column('report_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
        sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
        sa.PrimaryKeyConstraint('report_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report_tag')
    op.drop_table('alert_notification')
    op.drop_index(op.f('ix_alert_action_id'), table_name='alert_action')
    op.drop_table('alert_action')
    op.drop_index(op.f('ix_comment_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_attachment_id'), table_name='attachment')
    op.drop_table('attachment')
    op.drop_index(op.f('ix_map_settings_id'), table_name='map_settings')
    op.drop_table('map_settings')
    op.drop_index(op.f('ix_geo_layer_id'), table_name='geo_layer')
    op.drop_table('geo_layer')
    op.drop_index(op.f('ix_map_marker_marker_type'), table_name='map_marker')
    op.drop_index(op.f('ix_map_marker_id'), table_name='map_marker')
    op.drop_table('map_marker')
    op.drop_index(op.f('ix_audit_log_timestamp'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_resource_type'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_action'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_alert_title'), table_name='alert')
    op.drop_index(op.f('ix_alert_status'), table_name='alert')
    op.drop_index(op.f('ix_alert_severity'), table_name='alert')
    op.drop_index(op.f('ix_alert_id'), table_name='alert')
    op.drop_index(op.f('ix_alert_created_at'), table_name='alert')
    op.drop_index(op.f('ix_alert_alert_type'), table_name='alert')
    op.drop_table('alert')
    op.drop_index(op.f('ix_tag_name'), table_name='tag')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_report_title'), table_name='report')
    op.drop_index(op.f('ix_report_status'), table_name='report')
    op.drop_index(op.f('ix_report_id'), table_name='report')
    op.drop_index(op.f('ix_report_classification'), table_name='report')
    op.drop_table('report')
    op.drop_index(op.f('ix_users_matricule'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
    
    # Drop enums
    op.execute("DROP TYPE IF EXISTS userrole;")
    op.execute("DROP TYPE IF EXISTS clearancelevel;")
    op.execute("DROP TYPE IF EXISTS reportstatus;")
    op.execute("DROP TYPE IF EXISTS alerttype;")
    op.execute("DROP TYPE IF EXISTS alertseverity;")
    op.execute("DROP TYPE IF EXISTS alertstatus;")
    op.execute("DROP TYPE IF EXISTS mapmarkertype;")